{"version":3,"sources":["components/navigation/logo.png","components/navigation/navigation.js","components/round/round.js","components/searchbox/searchbox.js","components/roundlist/roundlist.js","components/menu/menu.js","components/signin/signin.js","components/register/register.js","App.js","components/entry/entry.js","actions.js","constants.js","serviceWorker.js","reducers.js","index.js"],"names":["module","exports","Navigation","onRouteChange","isSignedIn","style","display","justifyContent","alt","src","logo","paddingTop","width","padding","transform","backgroundColor","color","className","onClick","Round","showRoundDetail","score","course","playing_date","score_to_par","fairways_in_regulation","greens_in_regulation","putts","putts_per_gir","rawDate","Date","formattedDate","getDate","parseInt","getMonth","getFullYear","bullsEyeIcon","icon","faBullseye","roadIcon","faRoad","ringIcon","faRing","border","flexDirection","alignSelf","SearchBox","searchfield","searchChange","type","placeholder","onChange","RoundList","rounds","overflow","map","user","i","key","id","Menu","Signin","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","loadUser","this","htmlFor","name","defaultValue","React","Component","App","data","submitted_rounds","joined","onInputChange","input","route","console","log","onRequestRounds","searchField","onSearchChange","isPending","filteredRounds","filter","round","toLowerCase","includes","class","connect","searchRounds","requestRounds","error","dispatch","payload","catch","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","initialStateSearch","initialStateRounds","logger","createLogger","rootReducer","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a52d40f9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.f2846a8a.png\";","import React from 'react';\nimport logo from './logo.png';\n\nconst Navigation = ({onRouteChange, isSignedIn}) => {\n    if(isSignedIn) {\n    return (\n        <div>\n            <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                <img alt=\"logo\" src={logo} style={{paddingTop: '10px', width: '100px'}}/>\n                <div style={{padding: '1rem', transform: 'rotate(90deg)'}}>...</div>\n            </div>\n            <nav style={{display: 'flex', justifyContent: 'space-between', backgroundColor: 'black', color: 'white', padding: '0 2rem'}}>\n                <p \n                    className=\"f4 link dim pointer\"\n                    onClick={() => onRouteChange('home')}\n                    >Home</p>\n                <p \n                    className=\"f4 link dim pointer\"\n                    onClick={() => onRouteChange('roundlist')}\n                    >Show rounds\n                </p>\n                <p \n                    className=\"f4 link dim pointer\"\n                    onClick={() => onRouteChange('signout')}>\n                        Sign out</p>\n                {/* <p \n                    className=\"f4 link dim pointer\"\n                    onClick={() => onRouteChange('statistics')}\n                    >\n                        Statistics</p> */}\n            </nav>\n        </div>\n    )} else {\n        return (\n            <nav style={{display: 'flex', justifyContent: 'flex-start'}}>\n                <p className=\"f3 link dim black underline pa3 pointer\" onClick={() => onRouteChange('signin')}>Sign in</p>\n                <p className=\"f3 link dim black underline pa3 pointer\" onClick={() => onRouteChange('register')}>Register</p>\n            </nav>\n        )\n    }\n}\n\nexport default Navigation","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBullseye, faRoad, faRing } from '@fortawesome/free-solid-svg-icons'\n\nconst Round = ({ showRoundDetail, score, course, playing_date, score_to_par, fairways_in_regulation, greens_in_regulation, putts_per_gir, putts }) => {\n    let rawDate = new Date(playing_date);\n    let formattedDate = rawDate.getDate() + \"-\" + parseInt(rawDate.getMonth()+1) + \"-\" + rawDate.getFullYear();\n\n    const bullsEyeIcon = <FontAwesomeIcon icon={faBullseye} />\n    const roadIcon = <FontAwesomeIcon icon={faRoad} />\n    const ringIcon = <FontAwesomeIcon icon={faRing} />\n\n    return (\n        <div\n            onClick={showRoundDetail}\n            className='pv3 ph3' \n            style={{border: '1px solid black'}}>\n            <div\n                className='pv2'\n                style={{display: 'flex', flexDirection: 'row', justifyContent: 'flex-start'}}>\n                <div \n                className='f2 b ph3'\n                style={{alignSelf: 'center'}}\n                >{score}</div>\n                <div className='tl'>\n                    <div className='b'>{formattedDate}</div>\n                    <div>{course}</div>\n                </div>\n            </div>\n            <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'space-between'}}>\n                <div>+{score_to_par}</div>\n                <div>{roadIcon} {fairways_in_regulation}/13</div>\n                <div>{bullsEyeIcon} {greens_in_regulation}/18</div>\n                <div>{ringIcon} {putts}</div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default Round","import React from 'react';\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n  return (\n    <div className='pa2'>\n      <input\n        className='pa3 ba b--green bg-lightest-blue'\n        type='search'\n        placeholder='search rounds'\n        onChange={searchChange}\n      />\n    </div>\n  );\n}\n\nexport default SearchBox;","import React from 'react';\nimport Round from '../round/round';\nimport SearchBox from '../searchbox/searchbox';\nimport Scroll from '../scroll/scroll';\n\nconst RoundList = ({rounds, showRoundDetail}) => {\n    return (\n        <div style={{display: 'flex', flexDirection: 'column', overflow: 'hidden'}}>\n          {\n            rounds.map((user, i) => {\n              return (\n                <Round\n                showRoundDetail={showRoundDetail[i]}\n                key={i}\n                id={rounds[i].id}\n                playing_date={rounds[i].playing_date}\n                course={rounds[i].course}\n                score={rounds[i].score}\n                score_to_par={rounds[i].score_to_par}\n                fairways_in_regulation={rounds[i].fairways_in_regulation}\n                greens_in_regulation={rounds[i].greens_in_regulation}\n                putts={rounds[i].putts}\n                putts_per_gir={rounds[i].putts_per_gir}\n                />\n              );\n            })\n          }\n        </div>\n    );\n}\n\nexport default RoundList","import React from 'react';\n\n\nconst Menu = ({onRouteChange}) => {\n    return (\n    <div className={{display: 'flex', flexDirection: 'column'}}>\n    <button onClick={() => onRouteChange('entry')} className='f4 w-100 link dim ph4 pv2 dib white bg-blue tl'>Play golf(coming soon)</button>\n    <button onClick={() => onRouteChange('roundlist')} className='f4 w-100 link dim ph4 pv2 dib white bg-blue tl'>Show all rounds</button>\n    <button className='f4 w-100 link dim ph4 pv2 dib white bg-blue tl'>Learn more (coming soon)</button>\n    </div>\n    )\n}\n\nexport default Menu","import React from 'react';\n\n\nclass Signin extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            signInEmail: '',\n            signInPassword: '',\n        }\n    }\n    onEmailChange = (event) => {\n        this.setState({signInEmail: event.target.value})\n    }\n\n    onPasswordChange = (event) => {\n        this.setState({signInPassword: event.target.value})\n    }\n\n    onSubmitSignIn = () => {\n        fetch('http://localhost:3005/signin', {\n            method: 'post',\n            headers: {'Content-type': 'application/json'},\n            body: JSON.stringify({\n                email: this.state.signInEmail,\n                password: this.state.signInPassword\n            })\n        })\n        .then(response => response.json())\n        .then(user => {\n            if (user.id) {\n                this.props.loadUser(user);\n                this.props.onRouteChange('home');\n            } \n        })\n\n    }\n    render() {\n        const {onRouteChange} = this.props;\n        return (\n            <article className=\"br3 ba b--black-10 mv4 w-75 mw6 shadow-5 center\">\n            <main className=\"pa4 black-80 authentication\">\n                <form className=\"measure\">\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                    <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\n                    <div className=\"mt3\">\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                        <input \n                            className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                            type=\"email\" \n                            name=\"email-address\"  \n                            id=\"email-address\"\n                            onChange={this.onEmailChange}\n                            defaultValue=\"test@test.test\"\n                        />\n                    </div>\n                    <div className=\"mv3\">\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                        <input \n                            className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                            type=\"password\" \n                            name=\"password\"  \n                            id=\"password\"\n                            onChange={this.onPasswordChange}\n                            defaultValue=\"test\"\n                        />\n                    </div>\n                    </fieldset>\n                    <div className=\"\">\n                    <input \n                        className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \n                        type=\"submit\" \n                        value=\"Sign in\"\n                        onClick={\n                            this.onSubmitSignIn()\n                            \n                        }\n                        />\n                    </div>\n                    <div className=\"lh-copy mt3\">\n                    <p onClick={() => onRouteChange('register')} className=\"f6 link dim black db pointer\">Register</p>\n                    </div>\n                </form>\n            </main>\n        </article>\n        )\n    }\n}\n\nexport default Signin","import React from 'react';\n\n\nclass Register extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            name: ''\n        }\n    }\n    onNameChange = (event) => {\n        this.setState({name: event.target.value})\n    }\n\n    onEmailchange = (event) => {\n        this.setState({email: event.target.value})\n    }\n\n    onPasswordChange = (event) => {\n        this.setState({password: event.target.value})\n    }\n\n    onSubmitSignIn = () => {\n        fetch('http://localhost:3005/register', {\n            method: 'post',\n            headers: {'Content-type': 'application/json'},\n            body: JSON.stringify({\n                email: this.state.email,\n                password: this.state.password,\n                name: this.state.name,\n            })\n        }).then(response => response.json())\n        .then(user => {\n            if (user) {\n                this.props.loadUser(user)\n                this.props.onRouteChange('home');\n            }\n        })\n    }\n\n    render() {\n        const {onRouteChange } = this.props;\n        return (\n            <article className=\"br3 ba b--black-10 mv4 w-75 mw6 shadow-5 center\">\n            <main className=\"pa4 black-80 authentication\">\n                <div className=\"measure\">\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                    <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\n                    <div className=\"mt3\">\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\n                        <input \n                            className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                            type=\"text\" \n                            name=\"name\"  \n                            id=\"name\"\n                            onChange={this.onNameChange}\n                        />\n                    </div>\n                    <div className=\"mt3\">\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                        <input \n                            className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                            type=\"email\" \n                            name=\"email-address\"  \n                            id=\"email-address\"\n                            onChange={this.onEmailchange}\n                        />\n                    </div>\n                    <div className=\"mv3\">\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                        <input \n                            className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                            type=\"password\" \n                            name=\"password\"  \n                            id=\"password\"\n                            onChange={this.onPasswordChange}\n                        />\n                    </div>\n                    </fieldset>\n                    <div className=\"\">\n                    <input \n                        className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \n                        type=\"submit\" \n                        value=\"Register\"\n                        onClick={this.onSubmitSignIn}\n                        />\n                    </div>\n                </div>\n            </main>\n        </article>\n        )\n    }\n}\n\nexport default Register","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport './App.css';\nimport Navigation from './components/navigation/navigation';\nimport RoundList from './components/roundlist/roundlist';\n// import Statistics from './components/statistics/statistics';\nimport Menu from './components/menu/menu';\nimport Signin from './components/signin/signin';\nimport Register from './components/register/register';\nimport Entry from './components/entry/entry';\n\nimport {setSearchField, requestRounds} from './actions';\nimport SearchBox from './components/searchbox/searchbox';\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchRounds.searchField,\n    rounds: state.requestRounds.rounds,\n    isPending: state.requestRounds.isPending,\n    error: state.requestRounds.error,\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n    onRequestRounds: () => dispatch(requestRounds())\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      route: 'home',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        submitted_rounds: 0,\n        joined: '',\n        // rounds: {\n        //   id: '',\n        //   score: '',\n        //   score_to_par: '',\n        //   playing_date: '',\n        //   course: '',\n        //   greens_in_regulation: '',\n        //   fairways_in_regulation: '',\n        //   putts: '',\n        //   putts_per_gir: ''\n        // }\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.props.onRequestRounds();\n  }\n\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      submitted_rounds: data.submitted_rounds,\n      joined: data.joined,\n      rounds: {\n        id: data.id,\n        score: data.score,\n        score_to_par: data.score_to_par,\n        playing_date: data.playing_date,\n        course: data.course,\n        greens_in_regulation: data.greens_in_regulation,\n        fairways_in_regulation: data.fairways_in_regulation,\n        putts: data.putts,\n        putts_per_gir:data.putts_per_gir\n      }\n    }})\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState({isSignedIn: false})\n    }\n    else if(route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n\n  showRoundDetail = () => {\n    console.log('clicked rounds');\n  }\n\n  render() {\n    const { isSignedIn, route } = this.state;\n    const { searchField, onSearchChange, rounds, isPending } = this.props;\n    const filteredRounds = rounds.filter(round => {\n        console.log('round', round);\n        return round.course.toLowerCase().includes(searchField.toLowerCase())\n    });\n\n    return isPending ? \n    <h1>Loading..</h1>\n    :\n    (\n      <div className=\"App landing-background\" >\n        <Navigation\n          isSignedIn={this.state.isSignedIn} \n          onRouteChange={this.onRouteChange}\n        />\n        { route === 'home' \n          ? \n          <div className=\"mx-auto center\">\n            <Menu onRouteChange={this.onRouteChange}/>\n\n          </div>\n          : (\n            route === 'roundlist'\n            ?\n            isSignedIn ? \n            <div class=\"roundlist\">\n              <SearchBox searchChange={onSearchChange}/>\n               <RoundList \n               rounds={filteredRounds}\n               showRoundDetail={this.showRoundDetail} />\n            </div>\n            : 'Login to see this content!'\n            :\n            <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            // : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n          ) \n        }\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\n\nclass Entry extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            courses: '',\n            teeColors: ''\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    onStartRound() {\n        alert('starting round!');\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            courses: event.target.value,\n            teeColor: event.target.value\n        })\n    }\n\n    componentDidMount() {\n        fetch('http://localhost:3005/courses')\n        .then(response => response.json())\n        .then(courses => {\n            console.log('courses ', courses);\n            this.setState({courses: courses})\n            // this.setState({courses: courses[0].name})\n            // this.setState({tracks: courses[0].track})\n        })\n        .catch(console.log('error fetching courses'));\n\n        fetch('http://localhost:3005/tee-colors')\n        .then(response => response.json())\n        .then(teeColors => {\n            this.setState({teeColors: teeColors})\n        })\n    }\n\n    render() {\n        let arrayOfCourses = Array.from(this.state.courses);\n        let arrayOfTeeColors = Array.from(this.state.teeColors);\n\n        let courseOptions = arrayOfCourses.map((course) =>\n        <option \n            key={course.id}\n            value={course.id}\n        >\n            {course.name, course.track}\n        </option>\n    );\n\n    let teeColorOptions = arrayOfTeeColors.map((tee) =>\n    <option \n        key={tee.id}\n        value={tee.tee_color}\n    >\n        {tee.tee_color}\n    </option>\n);\n    return (\n        <div>\n        <div className=\"mt3 w-40 center\">\n            <label className=\"db fw6 lh-copy f6\" htmlFor=\"round-score\">Front Course</label>\n            <select \n                name=\"frontCourse\" \n                className=\"custom-search-select\"\n                onChange={this.handleChange}\n            >\n\n                {courseOptions}\n           </select>\n        </div>\n        {/* <div className=\"mt3 w-40 center\">\n            <label className=\"db fw6 lh-copy f6\" htmlFor=\"round-score\">Back Course</label>\n            <select \n                name=\"customSearch\" \n                className=\"custom-search-select\"\n                onChange={this.handleChange} \n            >\n                <option>No back course</option>\n                {courseOptions}\n           </select>\n        </div> */}\n        <div className=\"mt3 w-40 center\">\n            <label className=\"db fw6 lh-copy f6\" htmlFor=\"round-score\">Tee Color</label>\n            <select \n                name=\"teeColor\" \n                className=\"custom-search-select\"\n                onChange={this.handleChange} \n            >\n                {teeColorOptions}\n           </select>\n        </div>\n            <button onClick={this.onStartRound}>Start round</button>\n        </div>\n    )\n    }\n}\n\nexport default Entry","import {\n    CHANGE_SEARCH_FIELD,\n    REQUEST_ROUNDS_SUCCESS,\n    REQUEST_ROUNDS_FAILED,\n    REQUEST_ROUNDS_PENDING,\n} from './constants';\n\nexport const setSearchField = (text) => {\n    return {\n        type: CHANGE_SEARCH_FIELD,\n        payload: text\n    }\n}\n\nexport const requestRounds = () => (dispatch) => {\n    dispatch({type: REQUEST_ROUNDS_PENDING});\n    fetch('http://localhost:3005/rounds')\n    .then(response => response.json())\n    .then(data => dispatch({type: REQUEST_ROUNDS_SUCCESS, payload: data}))\n    .catch(error => dispatch({type: REQUEST_ROUNDS_FAILED, payload: error}))\n}","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\nexport const REQUEST_ROUNDS_SUCCESS = 'REQUEST_ROUNDS_SUCCESS';\nexport const REQUEST_ROUNDS_FAILED = 'REQUEST_ROUNDS_FAILED';\nexport const REQUEST_ROUNDS_PENDING = 'REQUEST_ROUNDS_PENDING';","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n    CHANGE_SEARCH_FIELD,\n    REQUEST_ROUNDS_SUCCESS,\n    REQUEST_ROUNDS_FAILED,\n    REQUEST_ROUNDS_PENDING,\n} from './constants';\n\nconst initialStateSearch = {\n    searchField: ''\n}\n\nexport const searchRounds = (state=initialStateSearch, action={}) => {\n    switch(action.type) {\n        case CHANGE_SEARCH_FIELD:\n            return Object.assign({}, state, {searchField: action.payload});\n        default:\n            return state;\n    }\n}\n\nconst initialStateRounds = {\n    isPending: false,\n    rounds: [],\n    error: ''\n}\n\nexport const requestRounds = (state=initialStateRounds, action={}) => {\n    switch(action.type) {\n        case REQUEST_ROUNDS_PENDING:\n            return Object.assign({}, state, {isPending: true})\n        case REQUEST_ROUNDS_SUCCESS:\n            return Object.assign({}, state, {rounds: action.payload, isPending: false}) \n        case REQUEST_ROUNDS_FAILED: \n            return Object.assign({}, state, {error: action.payload, isPending: false})\n        default:\n            return state;\n    }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\nimport { createLogger } from 'redux-logger';\nimport { Provider, connect } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { searchRounds, requestRounds } from './reducers';\n\nconst logger = createLogger();\nconst rootReducer = combineReducers({searchRounds, requestRounds});\n\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger));\n\n\nReactDOM.render(\n<Provider store={store}>\n    <App />\n</Provider>, \ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}